apply plugin: 'maven-publish'
apply from: "../common/constants.gradle"
apply from: "../common/repos.gradle"

archivesBaseName = 'firebase-ui'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/**
 * Prepare artifacts for this an all sub-projects.
 */
task prepareArtifacts(dependsOn: [
        javadocJar,
        sourcesJar,
        assembleRelease,
        ':database:prepareArtifacts',
        ':storage:prepareArtifacts']) {

}

/**
 * Publish all artifacts to the maven local repository.
 */
task publishAllToMavenLocal(dependsOn: [
        'publishMonolithLibraryPublicationToMavenLocal',
        ':database:publishDatabaseLibraryPublicationToMavenLocal',
        ':storage:publishStorageLibraryPublicationToMavenLocal']) {

}

/**
 * Publish all artifacts to the customLocal repository.
 */
task publishAllToCustomLocal(dependsOn: [
        'publishMonolithLibraryPublicationToCustomLocalRepository',
        ':database:publishDatabaseLibraryPublicationToCustomLocalRepository',
        ':storage:publishStorageLibraryPublicationToCustomLocalRepository']) {

}

artifacts {
    archives javadocJar
    archives sourcesJar
}


publishing {

    publications {
        monolithLibrary(MavenPublication) {
            groupId project.ext.group
            artifactId archivesBaseName
            version project.ext.version

            // Release AAR, Sources, and JavaDoc
            artifact "$buildDir/outputs/aar/firebase-ui-release.aar"
            artifact sourcesJar
            artifact javadocJar
        }
    }

}
