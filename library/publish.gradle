apply plugin: 'maven-publish'

project.ext.group = 'com.firebase.ui'
project.ext.archivesBaseName = 'firebase-ui'
project.ext.version = '1.0.0-beta1'
project.ext.pomDesc = 'Firebase UI Android'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}


publishing {

    publications {
        library(MavenPublication) {
            groupId project.ext.group
            artifactId project.ext.archivesBaseName
            version project.ext.version

            // Release AAR, Sources, and JavaDoc
            artifact "$buildDir/outputs/aar/firebase-ui-release.aar"
            artifact sourcesJar
            artifact javadocJar
        }
    }

    // By passing -Pcustom_local=/some/path and running the
    // publishLibraryPublicationToCustomLocalRepository task you can publish this library to a
    // custom maven repository location on your machine.
    repositories {
        maven {
            name 'CustomLocal'
            url uri(project.hasProperty('custom_local') ? project.getProperty('custom_local') : '/tmp/')
        }
    }

}
